{"id":"podReader.js","dependencies":[{"name":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\solid-health-app\\inrupt-solid-app\\package.json","includedInParent":true,"mtime":1643281048105},{"name":"@inrupt/solid-client","loc":{"line":4,"column":7},"parent":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\solid-health-app\\inrupt-solid-app\\podReader.js","resolved":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\solid-health-app\\inrupt-solid-app\\node_modules\\@inrupt\\solid-client\\dist\\index.es.js"},{"name":"./podWriter","loc":{"line":5,"column":50},"parent":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\solid-health-app\\inrupt-solid-app\\podReader.js","resolved":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\solid-health-app\\inrupt-solid-app\\podWriter.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.checkIfAdministrator = checkIfAdministrator;\nexports.checkIfDatasetExists = checkIfDatasetExists;\n\nvar _solidClient = require(\"@inrupt/solid-client\");\n\nvar _podWriter = require(\"./podWriter\");\n\nasync function checkIfDatasetExists(session, datasetUrl) {\n  try {\n    console.log(session);\n    console.log(datasetUrl);\n    const dataset = await (0, _solidClient.getSolidDataset)(datasetUrl, {\n      fetch: session.fetch\n    }); //const dataset = await getSolidDataset(\"https://testuser2.solidcommunity.net/healthData40404\", {fetch: session.fetch})\n\n    return true;\n  } catch (ex) {\n    console.log(ex);\n\n    if (ex.message.includes(\"Fetching the Resource at [\" + datasetUrl + \"] failed: [404]\")) //Dataset does not exist\n      {\n        return false;\n      } else if (ex.message.includes(\"Fetching the Resource at [\" + datasetUrl + \"] failed: [403]\")) //Dataset may exist but user not authorized\n      {\n        return false; //Not sure to return false here or not\n      }\n  }\n} // export async function checkIfHealthDataExists(session, healthDataUrl) {\n//     try {\n//         console.log(healthDataUrl + \"/Info\")\n//         const healthDataDataset = await getSolidDataset(healthDataUrl + \"/Info\", { fetch: session.fetch });\n//         console.log(healthDataDataset);\n//         const institutionDetails = await getThing(healthDataDataset, healthDataDatasetUrl + \"1/Info#medicalInstitutionDetails\")\n//         console.log(institutionDetails)\n//         let literalName = await getStringNoLocale(institutionDetails, \"http://schema.org/name\")\n//         let literalAddress = await getStringNoLocale(institutionDetails, \"http://schema.org/address\")\n//         console.log(literalName, literalAddress);\n//         document.getElementById(\"ownerOfPod\").innerHTML = \"Currently accessing the pod belonging to: \" + webID;\n//         document.getElementById(\"nameOfInstitution\").innerHTML = \"Who receives care at: \" + literalName;\n//         document.getElementById(\"addressOfInstitution\").innerHTML = \"Which is located at: \" + literalAddress;\n//         document.getElementById(\"accessingPod\").style.display = \"none\"\n//         document.getElementById(\"institutionInformation\").style.display = 'block'\n//         //checkIfAdministrator(healthDataDatasetUrl);\n//     }\n//     catch (ex) {\n//         console.log(\"here\", ex)\n//         if (ex instanceof TypeError) {\n//             console.log(ex.message)\n//             if (ex.message == \"Failed to fetch\") {\n//                 alert(\"Invalid URL entered, make sure URL is a valid WebID for a user's Solid pod.\")\n//             }\n//             else if (ex.message == \"Failed to construct 'URL': Invalid URL\") {\n//                 alert(\"No URL entered, enter a URL.\")\n//             }\n//         }\n//         if (ex instanceof Error) {\n//             if (ex.response.status == 404) //Health data dataset does not exist\n//             {\n//                 alert(\"You have not created a dataset in your Solid pod to hold medical record information. Please create one by following the steps below.\")\n//                 medicalInstitutionRegistered = false;\n//                 console.log(medicalInstitutionRegistered)\n//                 document.getElementById(\"accessingPod\").style.display = \"none\"\n//                 document.getElementById(\"registerNewMedicalInstitution\").style.display = 'block'\n//             }\n//             else if (ex.response.status == 403) //Not authorized\n//             {\n//                 alert(\"You have not been authorized to view medical records in the specified individual's pod. Contact them to request access.\")\n//             }\n//         }\n//         document.getElementById(\"podOwner\").value = \"\";\n//     }\n// }\n\n\nasync function checkIfAdministrator(session, urlOfHealthRecordDataset) {\n  let signedInUsersWebID = session.info.webId;\n  console.log(signedInUsersWebID);\n  console.log(urlOfHealthRecordDataset + \"1\");\n  const myDatasetWithAcl = await (0, _solidClient.getResourceInfoWithAcl)(urlOfHealthRecordDataset, {\n    fetch: session.fetch\n  });\n  console.log(myDatasetWithAcl.internal_resourceInfo.permissions.user); // const myAccess = await getAgentAccess(myDatasetWithAcl, signedInUsersWebID, {fetch: session.fetch})\n  // .then(access => {\n  //     logAccessInfo(signedInUsersWebID, access, urlOfHealthRecordDataset + \"1\")\n  // })\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":9,"column":0},"source":"podReader.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"podReader.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"podReader.js","original":{"line":7,"column":7}},{"name":"checkIfDatasetExists","generated":{"line":13,"column":15},"source":"podReader.js","original":{"line":7,"column":22}},{"generated":{"line":13,"column":35},"source":"podReader.js","original":{"line":7,"column":7}},{"name":"session","generated":{"line":13,"column":36},"source":"podReader.js","original":{"line":7,"column":43}},{"generated":{"line":13,"column":43},"source":"podReader.js","original":{"line":7,"column":7}},{"name":"datasetUrl","generated":{"line":13,"column":45},"source":"podReader.js","original":{"line":7,"column":52}},{"generated":{"line":13,"column":55},"source":"podReader.js","original":{"line":7,"column":7}},{"generated":{"line":13,"column":57},"source":"podReader.js","original":{"line":7,"column":64}},{"generated":{"line":14,"column":0},"source":"podReader.js","original":{"line":8,"column":4}},{"generated":{"line":14,"column":6},"source":"podReader.js","original":{"line":8,"column":8}},{"name":"console","generated":{"line":15,"column":0},"source":"podReader.js","original":{"line":9,"column":8}},{"name":"console","generated":{"line":15,"column":4},"source":"podReader.js","original":{"line":9,"column":8}},{"generated":{"line":15,"column":11},"source":"podReader.js","original":{"line":9,"column":15}},{"name":"log","generated":{"line":15,"column":12},"source":"podReader.js","original":{"line":9,"column":16}},{"generated":{"line":15,"column":15},"source":"podReader.js","original":{"line":9,"column":8}},{"name":"session","generated":{"line":15,"column":16},"source":"podReader.js","original":{"line":9,"column":20}},{"generated":{"line":15,"column":23},"source":"podReader.js","original":{"line":9,"column":8}},{"name":"console","generated":{"line":16,"column":0},"source":"podReader.js","original":{"line":10,"column":8}},{"name":"console","generated":{"line":16,"column":4},"source":"podReader.js","original":{"line":10,"column":8}},{"generated":{"line":16,"column":11},"source":"podReader.js","original":{"line":10,"column":15}},{"name":"log","generated":{"line":16,"column":12},"source":"podReader.js","original":{"line":10,"column":16}},{"generated":{"line":16,"column":15},"source":"podReader.js","original":{"line":10,"column":8}},{"name":"datasetUrl","generated":{"line":16,"column":16},"source":"podReader.js","original":{"line":10,"column":20}},{"generated":{"line":16,"column":26},"source":"podReader.js","original":{"line":10,"column":8}},{"generated":{"line":17,"column":0},"source":"podReader.js","original":{"line":11,"column":8}},{"name":"dataset","generated":{"line":17,"column":10},"source":"podReader.js","original":{"line":11,"column":14}},{"generated":{"line":17,"column":17},"source":"podReader.js","original":{"line":11,"column":21}},{"generated":{"line":17,"column":20},"source":"podReader.js","original":{"line":11,"column":24}},{"generated":{"line":17,"column":26},"source":"podReader.js","original":{"line":11,"column":30}},{"name":"datasetUrl","generated":{"line":17,"column":60},"source":"podReader.js","original":{"line":11,"column":46}},{"generated":{"line":17,"column":70},"source":"podReader.js","original":{"line":11,"column":30}},{"generated":{"line":17,"column":72},"source":"podReader.js","original":{"line":11,"column":58}},{"name":"fetch","generated":{"line":18,"column":0},"source":"podReader.js","original":{"line":11,"column":60}},{"name":"fetch","generated":{"line":18,"column":6},"source":"podReader.js","original":{"line":11,"column":60}},{"generated":{"line":18,"column":11},"source":"podReader.js","original":{"line":11,"column":65}},{"name":"session","generated":{"line":18,"column":13},"source":"podReader.js","original":{"line":11,"column":67}},{"generated":{"line":18,"column":20},"source":"podReader.js","original":{"line":11,"column":74}},{"name":"fetch","generated":{"line":18,"column":21},"source":"podReader.js","original":{"line":11,"column":75}},{"generated":{"line":19,"column":0},"source":"podReader.js","original":{"line":11,"column":58}},{"generated":{"line":19,"column":5},"source":"podReader.js","original":{"line":11,"column":30}},{"generated":{"line":19,"column":6},"source":"podReader.js","original":{"line":11,"column":8}},{"generated":{"line":19,"column":7},"source":"podReader.js","original":{"line":8,"column":8}},{"generated":{"line":19,"column":8},"source":"podReader.js","original":{"line":12,"column":8}},{"generated":{"line":21,"column":0},"source":"podReader.js","original":{"line":13,"column":8}},{"generated":{"line":21,"column":11},"source":"podReader.js","original":{"line":13,"column":15}},{"generated":{"line":21,"column":15},"source":"podReader.js","original":{"line":13,"column":8}},{"generated":{"line":22,"column":0},"source":"podReader.js","original":{"line":14,"column":5}},{"generated":{"line":22,"column":3},"source":"podReader.js","original":{"line":8,"column":4}},{"generated":{"line":22,"column":4},"source":"podReader.js","original":{"line":15,"column":4}},{"name":"ex","generated":{"line":22,"column":11},"source":"podReader.js","original":{"line":15,"column":11}},{"generated":{"line":22,"column":13},"source":"podReader.js","original":{"line":15,"column":4}},{"generated":{"line":22,"column":15},"source":"podReader.js","original":{"line":15,"column":15}},{"name":"console","generated":{"line":23,"column":0},"source":"podReader.js","original":{"line":16,"column":8}},{"name":"console","generated":{"line":23,"column":4},"source":"podReader.js","original":{"line":16,"column":8}},{"generated":{"line":23,"column":11},"source":"podReader.js","original":{"line":16,"column":15}},{"name":"log","generated":{"line":23,"column":12},"source":"podReader.js","original":{"line":16,"column":16}},{"generated":{"line":23,"column":15},"source":"podReader.js","original":{"line":16,"column":8}},{"name":"ex","generated":{"line":23,"column":16},"source":"podReader.js","original":{"line":16,"column":20}},{"generated":{"line":23,"column":18},"source":"podReader.js","original":{"line":16,"column":8}},{"generated":{"line":25,"column":0},"source":"podReader.js","original":{"line":17,"column":8}},{"name":"ex","generated":{"line":25,"column":8},"source":"podReader.js","original":{"line":17,"column":12}},{"generated":{"line":25,"column":10},"source":"podReader.js","original":{"line":17,"column":14}},{"name":"message","generated":{"line":25,"column":11},"source":"podReader.js","original":{"line":17,"column":15}},{"generated":{"line":25,"column":18},"source":"podReader.js","original":{"line":17,"column":12}},{"name":"includes","generated":{"line":25,"column":19},"source":"podReader.js","original":{"line":17,"column":23}},{"generated":{"line":25,"column":27},"source":"podReader.js","original":{"line":17,"column":12}},{"generated":{"line":25,"column":28},"source":"podReader.js","original":{"line":17,"column":32}},{"name":"datasetUrl","generated":{"line":25,"column":59},"source":"podReader.js","original":{"line":17,"column":63}},{"generated":{"line":25,"column":69},"source":"podReader.js","original":{"line":17,"column":32}},{"generated":{"line":25,"column":72},"source":"podReader.js","original":{"line":17,"column":76}},{"generated":{"line":25,"column":89},"source":"podReader.js","original":{"line":17,"column":12}},{"generated":{"line":25,"column":90},"source":"podReader.js","original":{"line":17,"column":8}},{"generated":{"line":25,"column":92},"source":"podReader.js","original":{"line":17,"column":97}},{"generated":{"line":26,"column":0},"source":"podReader.js","original":{"line":18,"column":8}},{"generated":{"line":27,"column":0},"source":"podReader.js","original":{"line":19,"column":12}},{"generated":{"line":27,"column":15},"source":"podReader.js","original":{"line":19,"column":19}},{"generated":{"line":27,"column":20},"source":"podReader.js","original":{"line":19,"column":12}},{"generated":{"line":28,"column":0},"source":"podReader.js","original":{"line":20,"column":9}},{"generated":{"line":28,"column":7},"source":"podReader.js","original":{"line":17,"column":8}},{"generated":{"line":28,"column":13},"source":"podReader.js","original":{"line":21,"column":13}},{"name":"ex","generated":{"line":28,"column":17},"source":"podReader.js","original":{"line":21,"column":17}},{"generated":{"line":28,"column":19},"source":"podReader.js","original":{"line":21,"column":19}},{"name":"message","generated":{"line":28,"column":20},"source":"podReader.js","original":{"line":21,"column":20}},{"generated":{"line":28,"column":27},"source":"podReader.js","original":{"line":21,"column":17}},{"name":"includes","generated":{"line":28,"column":28},"source":"podReader.js","original":{"line":21,"column":28}},{"generated":{"line":28,"column":36},"source":"podReader.js","original":{"line":21,"column":17}},{"generated":{"line":28,"column":37},"source":"podReader.js","original":{"line":21,"column":37}},{"name":"datasetUrl","generated":{"line":28,"column":68},"source":"podReader.js","original":{"line":21,"column":68}},{"generated":{"line":28,"column":78},"source":"podReader.js","original":{"line":21,"column":37}},{"generated":{"line":28,"column":81},"source":"podReader.js","original":{"line":21,"column":81}},{"generated":{"line":28,"column":98},"source":"podReader.js","original":{"line":21,"column":17}},{"generated":{"line":28,"column":99},"source":"podReader.js","original":{"line":21,"column":13}},{"generated":{"line":28,"column":101},"source":"podReader.js","original":{"line":21,"column":102}},{"generated":{"line":29,"column":0},"source":"podReader.js","original":{"line":22,"column":8}},{"generated":{"line":30,"column":0},"source":"podReader.js","original":{"line":23,"column":12}},{"generated":{"line":30,"column":15},"source":"podReader.js","original":{"line":23,"column":19}},{"generated":{"line":30,"column":20},"source":"podReader.js","original":{"line":23,"column":12}},{"generated":{"line":30,"column":21},"source":"podReader.js","original":{"line":22,"column":8}},{"generated":{"line":30,"column":22},"source":"podReader.js","original":{"line":23,"column":25}},{"generated":{"line":31,"column":0},"source":"podReader.js","original":{"line":24,"column":9}},{"generated":{"line":32,"column":0},"source":"podReader.js","original":{"line":25,"column":5}},{"generated":{"line":33,"column":0},"source":"podReader.js","original":{"line":26,"column":1}},{"generated":{"line":33,"column":2},"source":"podReader.js","original":{"line":28,"column":0}},{"generated":{"line":34,"column":0},"source":"podReader.js","original":{"line":29,"column":0}},{"generated":{"line":35,"column":0},"source":"podReader.js","original":{"line":30,"column":0}},{"generated":{"line":36,"column":0},"source":"podReader.js","original":{"line":31,"column":0}},{"generated":{"line":37,"column":0},"source":"podReader.js","original":{"line":32,"column":0}},{"generated":{"line":38,"column":0},"source":"podReader.js","original":{"line":33,"column":0}},{"generated":{"line":39,"column":0},"source":"podReader.js","original":{"line":34,"column":0}},{"generated":{"line":40,"column":0},"source":"podReader.js","original":{"line":35,"column":0}},{"generated":{"line":41,"column":0},"source":"podReader.js","original":{"line":36,"column":0}},{"generated":{"line":42,"column":0},"source":"podReader.js","original":{"line":37,"column":0}},{"generated":{"line":43,"column":0},"source":"podReader.js","original":{"line":38,"column":0}},{"generated":{"line":44,"column":0},"source":"podReader.js","original":{"line":39,"column":0}},{"generated":{"line":45,"column":0},"source":"podReader.js","original":{"line":40,"column":0}},{"generated":{"line":46,"column":0},"source":"podReader.js","original":{"line":41,"column":0}},{"generated":{"line":47,"column":0},"source":"podReader.js","original":{"line":42,"column":0}},{"generated":{"line":48,"column":0},"source":"podReader.js","original":{"line":43,"column":0}},{"generated":{"line":49,"column":0},"source":"podReader.js","original":{"line":44,"column":0}},{"generated":{"line":50,"column":0},"source":"podReader.js","original":{"line":45,"column":0}},{"generated":{"line":51,"column":0},"source":"podReader.js","original":{"line":46,"column":0}},{"generated":{"line":52,"column":0},"source":"podReader.js","original":{"line":47,"column":0}},{"generated":{"line":53,"column":0},"source":"podReader.js","original":{"line":48,"column":0}},{"generated":{"line":54,"column":0},"source":"podReader.js","original":{"line":49,"column":0}},{"generated":{"line":55,"column":0},"source":"podReader.js","original":{"line":50,"column":0}},{"generated":{"line":56,"column":0},"source":"podReader.js","original":{"line":51,"column":0}},{"generated":{"line":57,"column":0},"source":"podReader.js","original":{"line":52,"column":0}},{"generated":{"line":58,"column":0},"source":"podReader.js","original":{"line":53,"column":0}},{"generated":{"line":59,"column":0},"source":"podReader.js","original":{"line":54,"column":0}},{"generated":{"line":60,"column":0},"source":"podReader.js","original":{"line":55,"column":0}},{"generated":{"line":61,"column":0},"source":"podReader.js","original":{"line":56,"column":0}},{"generated":{"line":62,"column":0},"source":"podReader.js","original":{"line":57,"column":0}},{"generated":{"line":63,"column":0},"source":"podReader.js","original":{"line":58,"column":0}},{"generated":{"line":64,"column":0},"source":"podReader.js","original":{"line":59,"column":0}},{"generated":{"line":65,"column":0},"source":"podReader.js","original":{"line":60,"column":0}},{"generated":{"line":66,"column":0},"source":"podReader.js","original":{"line":61,"column":0}},{"generated":{"line":67,"column":0},"source":"podReader.js","original":{"line":62,"column":0}},{"generated":{"line":68,"column":0},"source":"podReader.js","original":{"line":63,"column":0}},{"generated":{"line":69,"column":0},"source":"podReader.js","original":{"line":64,"column":0}},{"generated":{"line":70,"column":0},"source":"podReader.js","original":{"line":65,"column":0}},{"generated":{"line":71,"column":0},"source":"podReader.js","original":{"line":66,"column":0}},{"generated":{"line":72,"column":0},"source":"podReader.js","original":{"line":67,"column":0}},{"generated":{"line":73,"column":0},"source":"podReader.js","original":{"line":68,"column":0}},{"generated":{"line":74,"column":0},"source":"podReader.js","original":{"line":69,"column":0}},{"generated":{"line":75,"column":0},"source":"podReader.js","original":{"line":70,"column":0}},{"generated":{"line":76,"column":0},"source":"podReader.js","original":{"line":71,"column":0}},{"generated":{"line":77,"column":0},"source":"podReader.js","original":{"line":72,"column":0}},{"generated":{"line":80,"column":0},"source":"podReader.js","original":{"line":74,"column":7}},{"name":"checkIfAdministrator","generated":{"line":80,"column":15},"source":"podReader.js","original":{"line":74,"column":22}},{"generated":{"line":80,"column":35},"source":"podReader.js","original":{"line":74,"column":7}},{"name":"session","generated":{"line":80,"column":36},"source":"podReader.js","original":{"line":74,"column":43}},{"generated":{"line":80,"column":43},"source":"podReader.js","original":{"line":74,"column":7}},{"name":"urlOfHealthRecordDataset","generated":{"line":80,"column":45},"source":"podReader.js","original":{"line":74,"column":52}},{"generated":{"line":80,"column":69},"source":"podReader.js","original":{"line":74,"column":7}},{"generated":{"line":80,"column":71},"source":"podReader.js","original":{"line":74,"column":78}},{"generated":{"line":81,"column":0},"source":"podReader.js","original":{"line":75,"column":4}},{"name":"signedInUsersWebID","generated":{"line":81,"column":6},"source":"podReader.js","original":{"line":75,"column":8}},{"generated":{"line":81,"column":24},"source":"podReader.js","original":{"line":75,"column":26}},{"name":"session","generated":{"line":81,"column":27},"source":"podReader.js","original":{"line":75,"column":29}},{"generated":{"line":81,"column":34},"source":"podReader.js","original":{"line":75,"column":36}},{"name":"info","generated":{"line":81,"column":35},"source":"podReader.js","original":{"line":75,"column":37}},{"generated":{"line":81,"column":39},"source":"podReader.js","original":{"line":75,"column":29}},{"name":"webId","generated":{"line":81,"column":40},"source":"podReader.js","original":{"line":75,"column":42}},{"generated":{"line":81,"column":45},"source":"podReader.js","original":{"line":75,"column":4}},{"name":"console","generated":{"line":82,"column":0},"source":"podReader.js","original":{"line":76,"column":4}},{"name":"console","generated":{"line":82,"column":2},"source":"podReader.js","original":{"line":76,"column":4}},{"generated":{"line":82,"column":9},"source":"podReader.js","original":{"line":76,"column":11}},{"name":"log","generated":{"line":82,"column":10},"source":"podReader.js","original":{"line":76,"column":12}},{"generated":{"line":82,"column":13},"source":"podReader.js","original":{"line":76,"column":4}},{"name":"signedInUsersWebID","generated":{"line":82,"column":14},"source":"podReader.js","original":{"line":76,"column":16}},{"generated":{"line":82,"column":32},"source":"podReader.js","original":{"line":76,"column":4}},{"name":"console","generated":{"line":83,"column":0},"source":"podReader.js","original":{"line":77,"column":4}},{"name":"console","generated":{"line":83,"column":2},"source":"podReader.js","original":{"line":77,"column":4}},{"generated":{"line":83,"column":9},"source":"podReader.js","original":{"line":77,"column":11}},{"name":"log","generated":{"line":83,"column":10},"source":"podReader.js","original":{"line":77,"column":12}},{"generated":{"line":83,"column":13},"source":"podReader.js","original":{"line":77,"column":4}},{"name":"urlOfHealthRecordDataset","generated":{"line":83,"column":14},"source":"podReader.js","original":{"line":77,"column":16}},{"generated":{"line":83,"column":38},"source":"podReader.js","original":{"line":77,"column":40}},{"generated":{"line":83,"column":41},"source":"podReader.js","original":{"line":77,"column":43}},{"generated":{"line":83,"column":44},"source":"podReader.js","original":{"line":77,"column":4}},{"generated":{"line":84,"column":0},"source":"podReader.js","original":{"line":79,"column":4}},{"name":"myDatasetWithAcl","generated":{"line":84,"column":8},"source":"podReader.js","original":{"line":79,"column":10}},{"generated":{"line":84,"column":24},"source":"podReader.js","original":{"line":79,"column":26}},{"generated":{"line":84,"column":27},"source":"podReader.js","original":{"line":79,"column":29}},{"generated":{"line":84,"column":33},"source":"podReader.js","original":{"line":79,"column":35}},{"name":"urlOfHealthRecordDataset","generated":{"line":84,"column":74},"source":"podReader.js","original":{"line":79,"column":58}},{"generated":{"line":84,"column":98},"source":"podReader.js","original":{"line":79,"column":35}},{"generated":{"line":84,"column":100},"source":"podReader.js","original":{"line":79,"column":84}},{"name":"fetch","generated":{"line":85,"column":0},"source":"podReader.js","original":{"line":79,"column":86}},{"name":"fetch","generated":{"line":85,"column":4},"source":"podReader.js","original":{"line":79,"column":86}},{"generated":{"line":85,"column":9},"source":"podReader.js","original":{"line":79,"column":91}},{"name":"session","generated":{"line":85,"column":11},"source":"podReader.js","original":{"line":79,"column":93}},{"generated":{"line":85,"column":18},"source":"podReader.js","original":{"line":79,"column":100}},{"name":"fetch","generated":{"line":85,"column":19},"source":"podReader.js","original":{"line":79,"column":101}},{"generated":{"line":86,"column":0},"source":"podReader.js","original":{"line":79,"column":84}},{"generated":{"line":86,"column":3},"source":"podReader.js","original":{"line":79,"column":35}},{"generated":{"line":86,"column":4},"source":"podReader.js","original":{"line":79,"column":4}},{"name":"console","generated":{"line":87,"column":0},"source":"podReader.js","original":{"line":81,"column":4}},{"name":"console","generated":{"line":87,"column":2},"source":"podReader.js","original":{"line":81,"column":4}},{"generated":{"line":87,"column":9},"source":"podReader.js","original":{"line":81,"column":11}},{"name":"log","generated":{"line":87,"column":10},"source":"podReader.js","original":{"line":81,"column":12}},{"generated":{"line":87,"column":13},"source":"podReader.js","original":{"line":81,"column":4}},{"name":"myDatasetWithAcl","generated":{"line":87,"column":14},"source":"podReader.js","original":{"line":81,"column":16}},{"generated":{"line":87,"column":30},"source":"podReader.js","original":{"line":81,"column":32}},{"name":"internal_resourceInfo","generated":{"line":87,"column":31},"source":"podReader.js","original":{"line":81,"column":33}},{"generated":{"line":87,"column":52},"source":"podReader.js","original":{"line":81,"column":16}},{"name":"permissions","generated":{"line":87,"column":53},"source":"podReader.js","original":{"line":81,"column":55}},{"generated":{"line":87,"column":64},"source":"podReader.js","original":{"line":81,"column":16}},{"name":"user","generated":{"line":87,"column":65},"source":"podReader.js","original":{"line":81,"column":67}},{"generated":{"line":87,"column":69},"source":"podReader.js","original":{"line":81,"column":4}},{"generated":{"line":87,"column":71},"source":"podReader.js","original":{"line":74,"column":78}},{"generated":{"line":87,"column":72},"source":"podReader.js","original":{"line":83,"column":4}},{"generated":{"line":88,"column":0},"source":"podReader.js","original":{"line":84,"column":4}},{"generated":{"line":89,"column":0},"source":"podReader.js","original":{"line":85,"column":4}},{"generated":{"line":90,"column":0},"source":"podReader.js","original":{"line":86,"column":4}},{"generated":{"line":91,"column":0},"source":"podReader.js","original":{"line":87,"column":1}}],"sources":{"podReader.js":"import {\r\n    getSolidDataset,\r\n    getResourceInfoWithAcl\r\n} from \"@inrupt/solid-client\";\r\nimport { storeMedicalInsitutionInformation } from \"./podWriter\";\r\n\r\nexport async function checkIfDatasetExists(session, datasetUrl) {\r\n    try {\r\n        console.log(session)\r\n        console.log(datasetUrl)\r\n        const dataset = await getSolidDataset(datasetUrl, { fetch: session.fetch });\r\n        //const dataset = await getSolidDataset(\"https://testuser2.solidcommunity.net/healthData40404\", {fetch: session.fetch})\r\n        return true\r\n    }\r\n    catch (ex) {\r\n        console.log(ex)\r\n        if (ex.message.includes(\"Fetching the Resource at [\" + datasetUrl + \"] failed: [404]\"))  //Dataset does not exist\r\n        {\r\n            return false\r\n        }\r\n        else if (ex.message.includes(\"Fetching the Resource at [\" + datasetUrl + \"] failed: [403]\"))  //Dataset may exist but user not authorized\r\n        {\r\n            return false //Not sure to return false here or not\r\n        }\r\n    }\r\n}\r\n\r\n// export async function checkIfHealthDataExists(session, healthDataUrl) {\r\n//     try {\r\n//         console.log(healthDataUrl + \"/Info\")\r\n//         const healthDataDataset = await getSolidDataset(healthDataUrl + \"/Info\", { fetch: session.fetch });\r\n//         console.log(healthDataDataset);\r\n//         const institutionDetails = await getThing(healthDataDataset, healthDataDatasetUrl + \"1/Info#medicalInstitutionDetails\")\r\n//         console.log(institutionDetails)\r\n//         let literalName = await getStringNoLocale(institutionDetails, \"http://schema.org/name\")\r\n//         let literalAddress = await getStringNoLocale(institutionDetails, \"http://schema.org/address\")\r\n//         console.log(literalName, literalAddress);\r\n//         document.getElementById(\"ownerOfPod\").innerHTML = \"Currently accessing the pod belonging to: \" + webID;\r\n//         document.getElementById(\"nameOfInstitution\").innerHTML = \"Who receives care at: \" + literalName;\r\n//         document.getElementById(\"addressOfInstitution\").innerHTML = \"Which is located at: \" + literalAddress;\r\n//         document.getElementById(\"accessingPod\").style.display = \"none\"\r\n//         document.getElementById(\"institutionInformation\").style.display = 'block'\r\n//         //checkIfAdministrator(healthDataDatasetUrl);\r\n//     }\r\n//     catch (ex) {\r\n//         console.log(\"here\", ex)\r\n//         if (ex instanceof TypeError) {\r\n//             console.log(ex.message)\r\n//             if (ex.message == \"Failed to fetch\") {\r\n//                 alert(\"Invalid URL entered, make sure URL is a valid WebID for a user's Solid pod.\")\r\n//             }\r\n//             else if (ex.message == \"Failed to construct 'URL': Invalid URL\") {\r\n//                 alert(\"No URL entered, enter a URL.\")\r\n//             }\r\n//         }\r\n//         if (ex instanceof Error) {\r\n//             if (ex.response.status == 404) //Health data dataset does not exist\r\n//             {\r\n//                 alert(\"You have not created a dataset in your Solid pod to hold medical record information. Please create one by following the steps below.\")\r\n//                 medicalInstitutionRegistered = false;\r\n//                 console.log(medicalInstitutionRegistered)\r\n//                 document.getElementById(\"accessingPod\").style.display = \"none\"\r\n//                 document.getElementById(\"registerNewMedicalInstitution\").style.display = 'block'\r\n//             }\r\n//             else if (ex.response.status == 403) //Not authorized\r\n//             {\r\n//                 alert(\"You have not been authorized to view medical records in the specified individual's pod. Contact them to request access.\")\r\n//             }\r\n//         }\r\n//         document.getElementById(\"podOwner\").value = \"\";\r\n//     }\r\n// }\r\n\r\nexport async function checkIfAdministrator(session, urlOfHealthRecordDataset) {\r\n    let signedInUsersWebID = session.info.webId\r\n    console.log(signedInUsersWebID)\r\n    console.log(urlOfHealthRecordDataset + \"1\")\r\n\r\n    const myDatasetWithAcl = await getResourceInfoWithAcl(urlOfHealthRecordDataset, { fetch: session.fetch });\r\n\r\n    console.log(myDatasetWithAcl.internal_resourceInfo.permissions.user)\r\n\r\n    // const myAccess = await getAgentAccess(myDatasetWithAcl, signedInUsersWebID, {fetch: session.fetch})\r\n    // .then(access => {\r\n    //     logAccessInfo(signedInUsersWebID, access, urlOfHealthRecordDataset + \"1\")\r\n    // })\r\n}"},"lineCount":null}},"error":null,"hash":"db5254565955c49dcf6bb6543dd8cd06","cacheData":{"env":{}}}