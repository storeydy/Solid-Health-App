{"id":"../node_modules/@inrupt/solid-client-authn-core/dist/constant.js","dependencies":[{"name":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\GitlabRepo\\solid-health-app\\inrupt-solid-app\\node_modules\\@inrupt\\solid-client-authn-core\\dist\\constant.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\GitlabRepo\\solid-health-app\\inrupt-solid-app\\node_modules\\@inrupt\\solid-client-authn-core\\src\\constant.ts","includedInParent":true,"mtime":1646658834366},{"name":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\GitlabRepo\\solid-health-app\\inrupt-solid-app\\package.json","includedInParent":true,"mtime":1646658842548},{"name":"C:\\Users\\store\\Documents\\College\\5th Year\\MAI Project\\GitlabRepo\\solid-health-app\\inrupt-solid-app\\node_modules\\@inrupt\\solid-client-authn-core\\package.json","includedInParent":true,"mtime":1646658834363}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.REFRESH_BEFORE_EXPIRATION_SECONDS = exports.EVENTS = exports.PREFERRED_SIGNING_ALG = exports.SOLID_CLIENT_AUTHN_KEY_PREFIX = void 0;\nexports.SOLID_CLIENT_AUTHN_KEY_PREFIX = \"solidClientAuthn:\";\nexports.PREFERRED_SIGNING_ALG = [\"ES256\", \"RS256\"];\nexports.EVENTS = {\n    NEW_REFRESH_TOKEN: \"newRefreshToken\",\n    ERROR: \"onError\",\n    SESSION_EXPIRED: \"sessionExpired\",\n    SESSION_EXTENDED: \"sessionExtended\",\n    TIMEOUT_SET: \"timeoutSet\",\n};\nexports.REFRESH_BEFORE_EXPIRATION_SECONDS = 5;\n"},"sourceMaps":{"js":{"version":3,"file":"constant.js","sourceRoot":"","sources":["../src/constant.ts"],"names":[],"mappings":";;;AA0Ba,QAAA,6BAA6B,GAAG,mBAAmB,CAAC;AAKpD,QAAA,qBAAqB,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAE3C,QAAA,MAAM,GAAG;IACpB,iBAAiB,EAAE,iBAAiB;IACpC,KAAK,EAAE,SAAS;IAChB,eAAe,EAAE,gBAAgB;IACjC,gBAAgB,EAAE,iBAAiB;IACnC,WAAW,EAAE,YAAY;CAC1B,CAAC;AAIW,QAAA,iCAAiC,GAAG,CAAC,CAAC","sourcesContent":["/*\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\n/**\r\n * Intended to be used by dependent packages as a common prefix for keys into\r\n * storage mechanisms (so as to group all keys related to Solid Client Authn\r\n * within those storage mechanisms, e.g., window.localStorage).\r\n */\r\nexport const SOLID_CLIENT_AUTHN_KEY_PREFIX = \"solidClientAuthn:\";\r\n\r\n/**\r\n * Ordered list of signature algorithms, from most preferred to least preferred.\r\n */\r\nexport const PREFERRED_SIGNING_ALG = [\"ES256\", \"RS256\"];\r\n\r\nexport const EVENTS = {\r\n  NEW_REFRESH_TOKEN: \"newRefreshToken\",\r\n  ERROR: \"onError\",\r\n  SESSION_EXPIRED: \"sessionExpired\",\r\n  SESSION_EXTENDED: \"sessionExtended\",\r\n  TIMEOUT_SET: \"timeoutSet\",\r\n};\r\n/**\r\n * We want to refresh a token 5 seconds before it expires.\r\n */\r\nexport const REFRESH_BEFORE_EXPIRATION_SECONDS = 5;\r\n"]}},"error":null,"hash":"7ec886637b94b9e349526b7cef2cde85","cacheData":{"env":{}}}